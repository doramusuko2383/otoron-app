import { switchScreen } from "../main.js";
import { loadTrainingRecords } from "../utils/recordStore_supabase.js";
import { getToday } from "../utils/growthUtils.js";
import { renderHeader } from "./header.js";
import {
  getGreeting,
  getTimeOfDay,
  clearTimeOfDayStyling,
} from "../utils/timeOfDay.js";
import { getAudio } from "../utils/audioCache.js";

export async function renderHomeScreen(user, options = {}) {
  const { showWelcome = false } = options;
  const app = document.getElementById("app");
  app.innerHTML = "";

  // Remove any previous time-of-day classes/intervals before applying new one
  clearTimeOfDayStyling();

  // ‚úÖ „Éò„ÉÉ„ÉÄ„ÉºÔºàÂõ∫ÂÆöË°®Á§∫„ÄÅ‰∏äÈÉ®„Å´Ë°®Á§∫Ôºâ
  renderHeader(app, user);

  // ‚úÖ „É°„Ç§„É≥„Ç≥„É≥„ÉÜ„É≥„ÉÑÔºà„Éò„ÉÉ„ÉÄ„Éº„ÅÆ‰∏ã„Å´Ë°®Á§∫Ôºâ
  const container = document.createElement("div");
  let timeClass = getTimeOfDay();
  // console.log('[home] time class:', timeClass);
  container.className = `home-screen active ${timeClass}`;
  document.body.classList.add(timeClass);
  app.appendChild(container);

  // ‚úÖ „ÅÇ„ÅÑ„Åï„Å§„ÉÜ„Ç≠„Çπ„Éà
  const titleText = document.createElement("h1");
  const userName = user?.name || "";
„ÄÄtitleText.innerHTML = `${userName}„Å°„ÇÉ„Çì<br>${getGreeting()}`;
  titleText.className = "greeting";
  container.appendChild(titleText);

  // ‚úÖ ‰ªäÊó•„ÅÆ„Éà„É¨„Éº„Éã„É≥„Ç∞ÂõûÊï∞
  const today = getToday();
  const sinceDate = new Date(Date.now() - 30 * 24 * 60 * 60 * 1000)
    .toISOString()
    .slice(0, 10);
  const records = await loadTrainingRecords(user?.id, sinceDate);
  const todayRecord = records[today] || { sets: 0 };

  const info = document.createElement("p");
  info.className = "today-count";
  info.innerHTML = `üéØ „Åç„Çá„ÅÜ „ÅÆ „Åå„Çì„Å∞„ÇäÔºö<strong>${todayRecord.sets}</strong>„Åã„ÅÑ`;
  container.appendChild(info);

  // Create trial info element ahead of time to preserve layout
  const trialInfo = document.createElement("p");
  trialInfo.className = "trial-info";
  trialInfo.style.visibility = "hidden";
  container.appendChild(trialInfo);

  if (
    user &&
    user.trial_active &&
    !user.is_premium &&
    user.trial_end_date
  ) {
    const end = new Date(user.trial_end_date);
    const now = new Date();
    const days = Math.ceil((end - now) / (1000 * 60 * 60 * 24));
    if (days <= 3) {
      trialInfo.classList.add("warning");
    }
    trialInfo.textContent = `ÁÑ°Êñô‰ΩìÈ®ìÊúüÈñì„ÅØÊÆã„Çä${days}Êó•`;
    trialInfo.style.visibility = "visible";
  }

  // ‚úÖ „Ç™„Éà„É≠„É≥ÁîªÂÉè„Å®„Çπ„Çø„Éº„Éà„Éú„Çø„É≥
  const logoContainer = document.createElement("div");
  logoContainer.className = "logo-container";

  const faceImg = document.createElement("img");
  faceImg.src =
    timeClass === "night" ? "images/night_otolon.webp" : "images/otolon.webp";
  faceImg.alt = "„Åä„Å®„Çç„Çì";
  faceImg.className = "otolon-face";
  faceImg.addEventListener("pointerdown", () => {
    const audio = getAudio("audio/touch.mp3");
    audio.play().catch((e) => console.warn("touch sound error", e));
    faceImg.classList.add("bounce");
    faceImg.addEventListener(
      "animationend",
      () => faceImg.classList.remove("bounce"),
      { once: true }
    );
  });

  // ‚úÖ „Éà„É¨„Éº„Éã„É≥„Ç∞ÈñãÂßã„Éú„Çø„É≥Ôºà„Å≤„Å®„Å§„Å´ÈõÜÁ¥ÑÔºâ
  const startButton = document.createElement("button");
  startButton.textContent = "„Å®„Çå„Éº„Å´„Çì„Åê „Åã„ÅÑ„Åó";
  startButton.className = "main-start-button"; // CSS„Åß„Éá„Ç∂„Ç§„É≥ÊåáÂÆö
  startButton.onclick = () => switchScreen("training");

  logoContainer.appendChild(faceImg);
  logoContainer.appendChild(startButton);

  container.appendChild(logoContainer);

  if (showWelcome) {
    showCustomAlert(
      "\u2728 „Çà„ÅÜ„Åì„Åù„Ç™„Éà„É≠„É≥„Å∏!\n\n„ÅÇ„Å™„Åü„ÅØÁèæÂú®\u300c7Êó•Èñì„ÅÆÁÑ°Êñô‰ΩìÈ®ì\u300d„Çí„ÅîÂà©Áî®‰∏≠„Åß„Åô„ÄÇ\nÊØéÊó•„ÅÆ„Éà„É¨„Éº„Éã„É≥„Ç∞„ÇÑË®òÈå≤Ê©üËÉΩ„Çí„ÄÅÂÖ®„Å¶Ëá™Áî±„Å´„ÅäË©¶„Åó„ÅÑ„Åü„Å†„Åë„Åæ„Åô„ÄÇ\n\nÊÆã„ÇäÊó•Êï∞„ÅØ„Éõ„Éº„É†ÁîªÈù¢„Å´Ë°®Á§∫„Åï„Çå„Åæ„Åô„ÄÇ"
    );
  }

  // ‚ñº ÊôÇÈñìÂ∏Ø„ÅÆÂ§âÂåñ„Å´Âêà„Çè„Åõ„Å¶ËÉåÊôØ„Å™„Å©„ÇíÊõ¥Êñ∞
  if (window.homeTimeInterval) {
    clearInterval(window.homeTimeInterval);
  }

  window.homeTimeInterval = setInterval(() => {
    if (!container.isConnected) {
      clearInterval(window.homeTimeInterval);
      window.homeTimeInterval = null;
      return;
    }

    const newClass = getTimeOfDay();
    if (newClass !== timeClass) {
      container.classList.remove(timeClass);
      container.classList.add(newClass);
      document.body.classList.remove(timeClass);
      document.body.classList.add(newClass);
      faceImg.src =
        newClass === "night" ? "images/night_otolon.webp" : "images/otolon.webp";
      titleText.textContent = `${userName}„Å°„ÇÉ„Çì ${getGreeting()}`;
      timeClass = newClass;
    }
  }, 60 * 1000);
}

// ‚úÖ ‰ªñ„ÅÆÁîªÈù¢„Åã„ÇâÂÜçÂà©Áî®„Åß„Åç„Çã„Ç´„Çπ„Çø„É† confirm Èñ¢Êï∞
export function showCustomConfirm(message, onConfirm, options = {}) {
  if (typeof message === "function") {
    onConfirm = message;
    message = "Êú¨ÂΩì„Å´ÂíåÈü≥„ÇíËß£Êîæ„Åó„Åæ„Åô„ÅãÔºü";
    options = {};
  }
  const {
    title = "",
    okText = "OK",
    cancelText = "„Ç≠„É£„É≥„Çª„É´",
    showCancel = true,
  } = options;
  let modal = document.getElementById("custom-confirm");
  if (!modal) {
    modal = document.createElement("div");
    modal.id = "custom-confirm";
    modal.className = "modal";

    const box = document.createElement("div");
    box.className = "modal-box";

    const titleNode = document.createElement("h3");
    titleNode.id = "custom-confirm-title";
    titleNode.textContent = title;
    titleNode.className = "modal-title";
    box.appendChild(titleNode);

    const messageEl = document.createElement("p");
    messageEl.id = "custom-confirm-message";
    messageEl.textContent = message;
    messageEl.className = "modal-message";
    box.appendChild(messageEl);

    const buttons = document.createElement("div");
    buttons.className = "modal-buttons";

    const okBtn = document.createElement("button");
    okBtn.className = "ok-btn";
    okBtn.onclick = () => {
      modal.style.display = "none";
      if (typeof modal.callback === "function") {
        modal.callback();
      }
    };

    const cancelBtn = document.createElement("button");
    cancelBtn.className = "cancel-btn";
    cancelBtn.onclick = () => {
      modal.style.display = "none";
    };

    buttons.appendChild(okBtn);
    buttons.appendChild(cancelBtn);
    box.appendChild(buttons);
    modal.appendChild(box);
    document.body.appendChild(modal);
  }

  const titleEl = modal.querySelector("#custom-confirm-title");
  if (titleEl) {
    titleEl.textContent = title;
    titleEl.style.display = title ? "block" : "none";
  }

  const msgEl = modal.querySelector("#custom-confirm-message");
  if (msgEl) {
    msgEl.textContent = message;
  }

  const okBtnEl = modal.querySelector(".ok-btn");
  if (okBtnEl) {
    okBtnEl.textContent = okText;
  }
  const cancelBtnEl = modal.querySelector(".cancel-btn");
  if (cancelBtnEl) {
    cancelBtnEl.textContent = cancelText;
    cancelBtnEl.style.display = showCancel ? "inline-block" : "none";
  }

  modal.callback = onConfirm;
  modal.style.display = "flex";
}

export function showCustomAlert(message, onOk, options = {}) {
  if (typeof message === "function") {
    onOk = message;
    message = "";
    options = {};
  }
  showCustomConfirm(message, onOk, { ...options, showCancel: false });
}
